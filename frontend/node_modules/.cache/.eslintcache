[{"D:\\Ecommerce\\frontend\\src\\context\\AppContext.jsx":"1","D:\\Ecommerce\\frontend\\src\\router\\Routers.js":"2","D:\\Ecommerce\\frontend\\src\\components\\Footer\\Footer.jsx":"3","D:\\Ecommerce\\frontend\\src\\components\\Category\\Category.jsx":"4","D:\\Ecommerce\\frontend\\src\\components\\Product\\Product.jsx":"5","D:\\Ecommerce\\frontend\\src\\components\\ProductCategory\\ProductCategory.jsx":"6","D:\\Ecommerce\\frontend\\src\\components\\ProductDetails\\ProductDetails.jsx":"7","D:\\Ecommerce\\frontend\\src\\components\\Cart\\Cart.jsx":"8","D:\\Ecommerce\\frontend\\src\\components\\Order\\Order.jsx":"9","D:\\Ecommerce\\frontend\\src\\components\\Header\\Header.jsx":"10","D:\\Ecommerce\\frontend\\src\\components\\OrderDetail\\OrderDetail.jsx":"11","D:\\Ecommerce\\frontend\\src\\components\\Profile\\CustomerProfile.jsx":"12","D:\\Ecommerce\\frontend\\src\\components\\Slide\\Slide.jsx":"13","D:\\Ecommerce\\frontend\\src\\components\\Seller\\AddProducts.jsx":"14","D:\\Ecommerce\\frontend\\src\\components\\Seller\\Seller.jsx":"15","D:\\Ecommerce\\frontend\\src\\components\\Register\\Register.jsx":"16","D:\\Ecommerce\\frontend\\src\\components\\Login\\Login.jsx":"17","D:\\Ecommerce\\frontend\\src\\components\\Seller\\SellerShop.jsx":"18","D:\\Ecommerce\\frontend\\src\\components\\Seller\\ShopPages.jsx":"19","D:\\Ecommerce\\frontend\\src\\components\\MyOrder\\MyOrder.jsx":"20"},{"size":1943,"mtime":1746950092154,"results":"21","hashOfConfig":"22"},{"size":2692,"mtime":1747022954481,"results":"23","hashOfConfig":"22"},{"size":5199,"mtime":1746636032682,"results":"24","hashOfConfig":"22"},{"size":1497,"mtime":1746874077580,"results":"25","hashOfConfig":"22"},{"size":1540,"mtime":1746954457586,"results":"26","hashOfConfig":"22"},{"size":2486,"mtime":1746939955391,"results":"27","hashOfConfig":"22"},{"size":5244,"mtime":1747024751722,"results":"28","hashOfConfig":"22"},{"size":6246,"mtime":1747074908799,"results":"29","hashOfConfig":"22"},{"size":7291,"mtime":1747074923159,"results":"30","hashOfConfig":"22"},{"size":3718,"mtime":1747074920679,"results":"31","hashOfConfig":"22"},{"size":985,"mtime":1746725886154,"results":"32","hashOfConfig":"22"},{"size":5536,"mtime":1746899498208,"results":"33","hashOfConfig":"22"},{"size":2711,"mtime":1746773710380,"results":"34","hashOfConfig":"22"},{"size":5969,"mtime":1746847274830,"results":"35","hashOfConfig":"22"},{"size":1133,"mtime":1746848341271,"results":"36","hashOfConfig":"22"},{"size":3037,"mtime":1746884488943,"results":"37","hashOfConfig":"22"},{"size":3389,"mtime":1746940045004,"results":"38","hashOfConfig":"22"},{"size":1762,"mtime":1747023180800,"results":"39","hashOfConfig":"22"},{"size":4473,"mtime":1747041231064,"results":"40","hashOfConfig":"22"},{"size":1928,"mtime":1747071707580,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},"1dnkhyo",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"46"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"D:\\Ecommerce\\frontend\\src\\context\\AppContext.jsx",["114"],[],"import { createContext, useContext, useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const AppContextProvider = ({ children }) => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n  const fetchCategories = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:3001/api/category/all');\r\n      setCategories(res.data || []);\r\n    } catch (error) {\r\n      console.error('Lỗi khi lấy danh mục:', error.message);\r\n    }\r\n  };\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const res = await axios.get('http://localhost:4003/api/product/all');\r\n      setProducts(res.data.products || []);\r\n    } catch (error) {\r\n      console.error('Lỗi khi lấy sản phẩm:', error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n  fetchProducts();\r\n  fetchCategories();\r\n  const storedUser = localStorage.getItem('user');\r\n  if (storedUser) {\r\n    setUser(JSON.parse(storedUser));\r\n  }\r\n}, []);  // Chỉ chạy khi component mount\r\n\r\n\r\n  const handleLogin = (userData, token) => {\r\n    setUser(userData);\r\n    setToken(token);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n    localStorage.setItem('token', token);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n  };\r\n\r\n  const value = {\r\n    categories,\r\n    setCategories,\r\n    products,\r\n    setProducts,\r\n    user,\r\n    token,\r\n    handleLogin,\r\n    handleLogout,\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAppContext = () => useContext(AppContext);\r\n",[],"D:\\Ecommerce\\frontend\\src\\router\\Routers.js",[],[],[],"D:\\Ecommerce\\frontend\\src\\components\\Footer\\Footer.jsx",[],[],"D:\\Ecommerce\\frontend\\src\\components\\Category\\Category.jsx",["115","116","117"],[],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Col, Row } from 'antd';\r\nimport './category.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toSlug } from '../../utils/toSlug';\r\nimport { useAppContext } from '../../context/AppContext';\r\nexport const Category = () => {\r\n    const navigate = useNavigate();\r\n    const { categories } = useAppContext(); \r\n\r\n    return (\r\n        <section className='category'>\r\n            <h2>Danh Mục</h2>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className='category__list'>\r\n                        {categories.map((item) => {\r\n                            const path = toSlug(item.name);\r\n                            return (\r\n                                <div\r\n                                    key={item._id}\r\n                                    className='category__item'\r\n                                    onClick={() => navigate(`/product/${path}`)} \r\n                                >\r\n                                    <div className='category__item-img'>\r\n                                        <img src={item.image} alt={item.name} />\r\n                                    </div>\r\n                                    <span>{item.name}</span>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </section>\r\n    );\r\n};\r\n",[],"D:\\Ecommerce\\frontend\\src\\components\\Product\\Product.jsx",[],[],"D:\\Ecommerce\\frontend\\src\\components\\ProductCategory\\ProductCategory.jsx",[],[],"D:\\Ecommerce\\frontend\\src\\components\\ProductDetails\\ProductDetails.jsx",[],[],"D:\\Ecommerce\\frontend\\src\\components\\Cart\\Cart.jsx",["118","119"],[],"D:\\Ecommerce\\frontend\\src\\components\\Order\\Order.jsx",["120","121"],[],"import React, { useState, useEffect } from 'react';\r\nimport { useAppContext } from '../../context/AppContext';\r\nimport axios from 'axios';\r\nimport './order.css';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nexport const Order = () => {\r\n  const { user } = useAppContext();\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [shippingInfo, setShippingInfo] = useState({\r\n    name: '',\r\n    phone: '',\r\n    province: '',\r\n    address: '',\r\n  });\r\n  const [paymentMethod, setPaymentMethod] = useState('');\r\n  const [transportMethod, setTransportMethod] = useState('');\r\n  const [totalAmount, setTotalAmount] = useState(0);\r\n\r\n  const transportCosts = {\r\n    GHN: 35000,\r\n    GHTK: 30000,\r\n    ViettelPost: 25000,\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchCart = async () => {\r\n      try {\r\n        const res = await axios.get(`http://localhost:3003/api/cart/user/${user.id}`);\r\n        setCartItems(res.data);\r\n        const total = res.data.reduce(\r\n          (total, item) => total + item.quantity * item.productId.price, 0\r\n        );\r\n        setTotalAmount(total);\r\n      } catch (error) {\r\n        console.error('Lỗi khi lấy giỏ hàng:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (user?.id) {\r\n      fetchCart();\r\n    }\r\n  }, [user]);\r\n  const updateTotalAmount = (newTransportMethod) => {\r\n    const transportCost = transportCosts[newTransportMethod] || 0;\r\n    const newTotalAmount = cartItems.reduce(\r\n      (total, item) => total + item.quantity * item.productId.price, 0\r\n    ) + transportCost;\r\n    setTotalAmount(newTotalAmount);\r\n  };\r\n\r\n  const handleTransportChange = (e) => {\r\n    setTransportMethod(e.target.value);\r\n    updateTotalAmount(e.target.value);\r\n  };\r\n  const handleOrderSubmit = async () => {\r\n    try {\r\n      const paymentRes =  await axios.get(`http://localhost:3007/api/payment/method/${paymentMethod}`);\r\n      const paymentData = Array.isArray(paymentRes.data) ? paymentRes.data[0] : paymentRes.data;\r\n      const transportRes = await axios.get(`http://localhost:3005/api/transport/method/${transportMethod}`);\r\n      const transportData = Array.isArray(transportRes.data) ? transportRes.data[0] : transportRes.data;\r\n      if (!paymentData?._id || !transportData?._id) {\r\n        alert('Không tìm thấy phương thức thanh toán hoặc vận chuyển hợp lệ');\r\n        return;\r\n      }\r\n      const orderData = {\r\n        totalOrder: totalAmount,\r\n        customerId: user.id,\r\n        paymentId: paymentData._id,\r\n        shippingInfo,\r\n        transportId: transportData._id,\r\n        status: 'pending',\r\n        userId: user.id,\r\n\r\n      };\r\n      const orderRes = await axios.post('http://localhost:4000/api/order/create', orderData);\r\n      console.log(\"Phản hồi từ API tạo đơn hàng:\", orderRes.data);\r\n      const order = orderRes.data.order;\r\n      const orderId = order._id;\r\n\r\n      if (!orderId) {\r\n        alert('Không tìm thấy ID đơn hàng.');\r\n        return;\r\n      }\r\n\r\n      for (const item of cartItems) {\r\n        const orderDetailsData = {\r\n          orderId: orderId,\r\n          productId: item.productId._id,\r\n          quantity: item.quantity,\r\n          totalPrice: item.quantity * item.productId.price,\r\n        };\r\n        console.log(\"Dữ liệu chi tiết đơn hàng:\", orderDetailsData);\r\n\r\n        await axios.post('http://localhost:4001/api/orderDetails/create', orderDetailsData);\r\n      }\r\n\r\n      alert('Đặt hàng thành công!');\r\n    } catch (error) {\r\n      console.error('Lỗi khi tạo đơn hàng:', error);\r\n      if (error.response) {\r\n        alert(`Lỗi: ${error.response.data.message || 'Có lỗi xảy ra, vui lòng thử lại!'}`);\r\n\r\n      } else {\r\n        alert('Đặt hàng không thành công, vui lòng kiểm tra kết nối.');\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"payment-container\">\r\n      <div className=\"address-section\">\r\n        <h3>Địa chỉ nhận hàng</h3>\r\n        <form className=\"address-form\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Họ và tên\"\r\n            name=\"name\"\r\n            value={shippingInfo.name}\r\n            onChange={(e) => setShippingInfo({ ...shippingInfo, name: e.target.value })}\r\n            required\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Phone\"\r\n            name=\"phone\"\r\n            value={shippingInfo.phone}\r\n            onChange={(e) => setShippingInfo({ ...shippingInfo, phone: e.target.value })}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Tỉnh / Thành phố\"\r\n            name=\"province\"\r\n            value={shippingInfo.province}\r\n            onChange={(e) => setShippingInfo({ ...shippingInfo, province: e.target.value })}\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Địa chỉ chi tiết\"\r\n            name=\"address\"\r\n            value={shippingInfo.address}\r\n            onChange={(e) => setShippingInfo({ ...shippingInfo, address: e.target.value })}\r\n            required\r\n          />\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"payment-method-section\">\r\n        <h3>Phương thức thanh toán</h3>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"paymentMethod\"\r\n            value=\"cod\"\r\n            onChange={(e) => setPaymentMethod(e.target.value)}\r\n          />\r\n          Thanh toán khi nhận hàng (COD)\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"transport-method\">\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"transportMethod\"\r\n            value=\"GHN\"\r\n            onChange={handleTransportChange}\r\n          />\r\n          GHN: 35000 Đ\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"transportMethod\"\r\n            value=\"GHTK\"\r\n            onChange={handleTransportChange}\r\n          />\r\n          GHTK: 30000 Đ\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"transportMethod\"\r\n            value=\"ViettelPost\"\r\n            onChange={handleTransportChange}\r\n          />\r\n          Viettel Post: 25000 Đ\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"product-summary\">\r\n        <h3>Sản phẩm</h3>\r\n        {loading ? (\r\n          <p>Đang tải...</p>\r\n        ) : cartItems.length === 0 ? (\r\n          <p>Giỏ hàng trống</p>\r\n        ) : (\r\n          cartItems.map((item) => (\r\n            <div className=\"summary-item\" key={item._id}>\r\n              <img src={item.productId.image[0]} alt={item.productId.name} />\r\n              <div>\r\n                <p>{item.productId.name}</p>\r\n                <p>Số lượng: {item.quantity}</p>\r\n                <p>Giá: {item.productId.price.toLocaleString()} đ</p>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"payment-summary\">\r\n        <h3>Tổng thanh toán</h3>\r\n        <p>{totalAmount.toLocaleString()} đ</p>\r\n        <button className=\"btn-confirm\" onClick={handleOrderSubmit}>Đặt hàng</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\Ecommerce\\frontend\\src\\components\\Header\\Header.jsx",["122","123","124","125"],[],"import React, { useEffect, useState } from 'react';\r\nimport { Col, Row } from 'antd';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './header.css';\r\nimport logo from '../../assets/images/logo/logo.png';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nexport const Header = () => {\r\n  const navigate = useNavigate();\r\n  const [user, setUser] = useState(null);\r\n  const [cartCount, setCartCount] = useState(0);\r\n   const { sellerId } = useParams();\r\n\r\n\r\n  useEffect(() => {\r\n    const userData = localStorage.getItem('user');\r\n    if (userData) {\r\n      const parsedUser = JSON.parse(userData);\r\n      setUser(parsedUser);\r\n\r\n      // Fixed URL formatting with backticks\r\n      axios.get(`http://localhost:3003/api/cart/user/${parsedUser.id}`)\r\n        .then((res) => {\r\n      \r\n          const total = res.data.reduce((acc, item) => acc + item.quantity, 0);\r\n          setCartCount(total);\r\n        })\r\n        .catch((err) => {\r\n          console.error('Lỗi lấy giỏ hàng:', err);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <header className='header'>\r\n      <Row className='header__top' justify=\"space-between\">\r\n        <Col>\r\n          <ul className='header__top-left d-flex align-items-center'>\r\n            <li><Link to=\"/home\">Trang chủ Shopee</Link></li>\r\n            <li><Link to=\"/seller/register\">Trở thành Người bán</Link></li>\r\n            <li><Link to=\"/download\">Tải ứng dụng</Link></li>\r\n            <li>\r\n              <span>Kết nối</span>\r\n              <a href=\"#\"><i className=\"fa-brands fa-facebook\"></i></a>\r\n              <a href=\"#\"><i className=\"fa-brands fa-instagram\"></i></a>\r\n            </li>\r\n          </ul>\r\n        </Col>\r\n        <Col>\r\n          <ul className='header__top-right d-flex align-items-center'>\r\n            <li><a href=\"#\"><i className=\"fa-solid fa-bell\"></i> Thông báo</a></li>\r\n            <li><Link to=\"/support\"><i className=\"fa-solid fa-question\"></i> Hỗ trợ</Link></li>\r\n\r\n            {user ? (\r\n              <>\r\n                <li>\r\n                  <Link to=\"/customerProfile\">\r\n                    <i className=\"fa-solid fa-user\"></i> {user.name}\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <button onClick={handleLogout} className=\"btn-logout\">\r\n                    <i className=\"fa-solid fa-right-from-bracket\"></i> Đăng xuất\r\n                  </button>\r\n                </li>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <li><Link to=\"/register\">Đăng ký</Link></li>\r\n                <li><Link to=\"/login\">Đăng nhập</Link></li>\r\n              </>\r\n            )}\r\n          </ul>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className='header__main' align=\"middle\" justify=\"space-between\">\r\n        <Col span={4} className='logo'>\r\n          <Link to=\"/home\">\r\n            <img src={logo} alt=\"Shopee Logo\" className=\"header__logo\" />\r\n          </Link>\r\n        </Col>\r\n        <Col span={16}>\r\n          <div className=\"header__search\">\r\n            <input type=\"text\" placeholder=\"Tìm sản phẩm, thương hiệu và tên shop\" />\r\n            <button><i className=\"fa-solid fa-magnifying-glass\"></i></button>\r\n          </div>\r\n        </Col>\r\n        <Col span={4} className=\"header__cart\">\r\n          <Link to=\"/cart\">\r\n            <i className=\"fa-solid fa-cart-shopping\"></i>\r\n            <span className=\"cart-count\">{cartCount}</span>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </header>\r\n  );\r\n};",[],"D:\\Ecommerce\\frontend\\src\\components\\OrderDetail\\OrderDetail.jsx",[],[],"D:\\Ecommerce\\frontend\\src\\components\\Profile\\CustomerProfile.jsx",["126"],[],"import React, { useState, useEffect } from 'react';\r\nimport './customerprofile.css';\r\nimport axios from 'axios';\r\nimport { useAppContext } from '../../context/AppContext';\r\n\r\nexport const CustomerProfile = () => {\r\n    const { user } = useAppContext();\r\n\r\n    const [formData, setFormData] = useState({\r\n        fullName: '',\r\n        phone: '',\r\n        address: '',\r\n        birthday: '',\r\n        gender: '',\r\n    });\r\n\r\n    const [customerId, setCustomerId] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (user?._id) {\r\n            fetchCustomer(user._id);\r\n        } else {\r\n            resetForm();\r\n        }\r\n    }, [user]);\r\n\r\n    const fetchCustomer = async (userId) => {\r\n        try {\r\n            const res = await axios.get(`http://localhost:3002/api/customer/user/${userId}`);\r\n            if (res.data) {\r\n                const { fullName, phone, address, birthday, gender, _id } = res.data;\r\n                setFormData({ fullName, phone, address, birthday: birthday?.substring(0, 10), gender });\r\n                setCustomerId(_id);\r\n            }\r\n        } catch (error) {\r\n            if (error.response?.status === 404) {\r\n                // Chưa có customer => tạo mới\r\n                createCustomer(userId);\r\n            } else {\r\n                console.error('Lỗi lấy thông tin customer:', error.message);\r\n            }\r\n        }\r\n    };\r\n\r\n    const createCustomer = async (userId) => {\r\n        try {\r\n            const res = await axios.post(`http://localhost:3002/api/customer/create`, {\r\n                fullName: '',\r\n                phone: '',\r\n                address: '',\r\n                birthday: '',\r\n                gender: '',\r\n                userId,  // Đảm bảo `userId` được gửi chính xác\r\n            });\r\n            const { _id } = res.data.customer;\r\n            setCustomerId(_id);  // Lưu lại `_id` của customer vào state\r\n        } catch (error) {\r\n            console.error('Lỗi tạo customer:', error.message);\r\n        }\r\n    };\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!customerId) return;\r\n\r\n        try {\r\n            await axios.put(`http://localhost:3002/api/customer/update/${customerId}`, formData);\r\n            alert('Cập nhật thông tin thành công!');\r\n        } catch (error) {\r\n            console.error('Lỗi cập nhật customer:', error.message);\r\n        }\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setFormData({\r\n            fullName: '',\r\n            phone: '',\r\n            address: '',\r\n            birthday: '',\r\n            gender: '',\r\n        });\r\n        setCustomerId(null);\r\n    };\r\n\r\n    return (\r\n        <div className=\"customer-profile\">\r\n            <h2>Thông Tin Khách Hàng</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Họ và tên</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"fullName\"\r\n                        value={formData.fullName}\r\n                        onChange={handleChange}\r\n                        required\r\n                        className=\"input-phone\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Điện Thoại</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"phone\"\r\n                        value={formData.phone}\r\n                        onChange={handleChange}\r\n                        required\r\n                        className=\"input-phone\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Địa chỉ</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"address\"\r\n                        value={formData.address}\r\n                        onChange={handleChange}\r\n                        required\r\n                        className=\"input-phone\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Sinh Nhật</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        name=\"birthday\"\r\n                        value={formData.birthday}\r\n                        onChange={handleChange}\r\n                        required\r\n                        className=\"input-date\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Giới tính</label>\r\n                    <select\r\n                        name=\"gender\"\r\n                        value={formData.gender}\r\n                        onChange={handleChange}\r\n                        required\r\n                        className=\"input-gender\"\r\n                    >\r\n                        <option value=\"\">Chọn giới tính</option>\r\n                        <option value=\"male\">Nam</option>\r\n                        <option value=\"female\">Nữ</option>\r\n                        <option value=\"other\">Khác</option>\r\n                    </select>\r\n                </div>\r\n                <button type=\"submit\" className=\"updateProfile\">\r\n                    Lưu\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n","D:\\Ecommerce\\frontend\\src\\components\\Slide\\Slide.jsx",[],[],"D:\\Ecommerce\\frontend\\src\\components\\Seller\\AddProducts.jsx",[],[],"D:\\Ecommerce\\frontend\\src\\components\\Seller\\Seller.jsx",[],[],"D:\\Ecommerce\\frontend\\src\\components\\Register\\Register.jsx",["127","128"],[],"import React, { useState } from 'react';\r\nimport logo from '../../assets/images/logo/logo.png';\r\nimport { NavLink, Link, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './register.css';\r\n\r\nexport const Register = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(formData.email)) {\r\n      alert('Email không hợp lệ');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:4005/api/auth/register', formData);\r\n      alert('Đăng ký thành công');\r\n      navigate('/login');\r\n    } catch (error) {\r\n      alert(error.response?.data?.message || 'Đăng ký thất bại');\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className='register'>\r\n      <header className='register__header'>\r\n        <div className='register__header-box'>\r\n          <div className='register__header-logo'>\r\n            <Link to=\"/\"><img src={logo} alt=\"Logo\" /></Link>\r\n            <h3>Đăng ký</h3>\r\n          </div>\r\n          <a href=\"#\">Bạn cần giúp đỡ?</a>\r\n        </div>\r\n      </header>\r\n\r\n      <div className='register__container'>\r\n        <div className='register-logoleft'>\r\n          <img src={logo} alt=\"Logo\" />\r\n          <p>Nền tảng thương mại điện tử hàng đầu Đông Nam Á</p>\r\n        </div>\r\n        <form onSubmit={handleSubmit}>\r\n          <span>Đăng ký</span>\r\n          <div className='form-group'>\r\n            <input type=\"text\" name=\"name\" placeholder=\"Họ và tên\" onChange={handleChange} required />\r\n          </div>\r\n          <div className='form-group'>\r\n            <input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={handleChange} required />\r\n          </div>\r\n          <div className='form-group'>\r\n            <input type=\"password\" name=\"password\" placeholder=\"Mật khẩu\" onChange={handleChange} required />\r\n          </div>\r\n          <button type=\"submit\" className='btn-submit'>Đăng ký</button>\r\n          <div className=\"social-login\">\r\n            <button type=\"button\" className=\"btn-facebook\"><i className=\"fa-brands fa-facebook\"></i> Facebook</button>\r\n            <button type=\"button\" className=\"btn-google\"><i className=\"fa-brands fa-google\"></i> Google</button>\r\n          </div>\r\n          <p className=\"terms\">\r\n            Bằng việc đăng ký, bạn đã đồng ý với <Link to=\"/terms\">Shopee về Điều khoản sử dụng</Link> &amp;\r\n            <Link to=\"/privacy-policy\"> Chính sách bảo mật</Link>\r\n          </p>\r\n          <p className=\"already-account\">\r\n            Bạn đã có tài khoản? <NavLink to=\"/login\">Đăng nhập</NavLink>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};",[],"D:\\Ecommerce\\frontend\\src\\components\\Login\\Login.jsx",["129"],[],"import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './login.css';\r\nimport logo from '../../assets/images/logo/logo.png';\r\n\r\nexport const Login = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const togglePassword = () => setShowPassword(!showPassword);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post('http://localhost:4005/api/auth/login', formData);\r\n      const { token, user } = res.data;\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      navigate('/'); \r\n    } catch (error) {\r\n      console.error('Lỗi đăng nhập:', error.response?.data?.message || error.message);\r\n      alert(error.response?.data?.message || 'Đăng nhập thất bại');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='login'>\r\n      <header className='login__header'>\r\n        <div className='login__header-box'>\r\n          <div className='login__header-logo'>\r\n            <Link to=\"/\"><img src={logo} alt=\"Logo\" /></Link>\r\n            <h3>Đăng nhập</h3>\r\n          </div>\r\n          <a href=\"#\">Bạn cần giúp đỡ?</a>\r\n        </div>\r\n      </header>\r\n\r\n      <div className='login__container'>\r\n        <div className='login-logoleft'>\r\n          <img src={logo} alt=\"Logo\" />\r\n          <p>Nền tảng thương mại điện tử hàng đầu Đông Nam Á</p>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <span>Đăng nhập</span>\r\n          <div className='form-group'>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              required\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n            />\r\n\r\n            <div className=\"password-input-wrapper\">\r\n              <input\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                name=\"password\"\r\n                placeholder=\"Mật khẩu\"\r\n                required\r\n                value={formData.password}\r\n                onChange={handleChange}\r\n              />\r\n              <span className=\"toggle-password\" onClick={togglePassword}>\r\n                <i className={`fa-solid ${showPassword ? \"fa-eye-slash\" : \"fa-eye\"}`}></i>\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <button type=\"submit\" className='btn-submit'>Đăng nhập</button>\r\n\r\n          <div className='login__options'>\r\n            <span>Quên mật khẩu</span>\r\n            <span>Đăng nhập với SMS</span>\r\n          </div>\r\n\r\n          <div className=\"social-login\">\r\n            <button type=\"button\" className=\"btn-facebook\"><i className=\"fa-brands fa-facebook\"></i> Facebook</button>\r\n            <button type=\"button\" className=\"btn-google\"><i className=\"fa-brands fa-google\"></i> Google</button>\r\n          </div>\r\n\r\n          <p className=\"no-account\">\r\n            Bạn mới biết đến Shopee? <Link to=\"/register\">Đăng ký</Link>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\Ecommerce\\frontend\\src\\components\\Seller\\SellerShop.jsx",[],[],"D:\\Ecommerce\\frontend\\src\\components\\Seller\\ShopPages.jsx",[],[],"D:\\Ecommerce\\frontend\\src\\components\\MyOrder\\MyOrder.jsx",[],[],{"ruleId":"130","severity":1,"message":"131","line":2,"column":10,"nodeType":"132","messageId":"133","endLine":2,"endColumn":21},{"ruleId":"130","severity":1,"message":"134","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":26},{"ruleId":"130","severity":1,"message":"135","line":1,"column":28,"nodeType":"132","messageId":"133","endLine":1,"endColumn":36},{"ruleId":"130","severity":1,"message":"136","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":13},{"ruleId":"130","severity":1,"message":"137","line":7,"column":9,"nodeType":"132","messageId":"133","endLine":7,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":45,"column":6,"nodeType":"140","endLine":45,"endColumn":22,"suggestions":"141"},{"ruleId":"130","severity":1,"message":"142","line":5,"column":10,"nodeType":"132","messageId":"133","endLine":5,"endColumn":14},{"ruleId":"130","severity":1,"message":"131","line":5,"column":16,"nodeType":"132","messageId":"133","endLine":5,"endColumn":27},{"ruleId":"130","severity":1,"message":"143","line":12,"column":12,"nodeType":"132","messageId":"133","endLine":12,"endColumn":20},{"ruleId":"144","severity":1,"message":"145","line":53,"column":15,"nodeType":"146","endLine":53,"endColumn":27},{"ruleId":"144","severity":1,"message":"145","line":54,"column":15,"nodeType":"146","endLine":54,"endColumn":27},{"ruleId":"144","severity":1,"message":"145","line":60,"column":17,"nodeType":"146","endLine":60,"endColumn":29},{"ruleId":"138","severity":1,"message":"147","line":25,"column":8,"nodeType":"140","endLine":25,"endColumn":14,"suggestions":"148"},{"ruleId":"130","severity":1,"message":"149","line":30,"column":13,"nodeType":"132","messageId":"133","endLine":30,"endColumn":21},{"ruleId":"144","severity":1,"message":"145","line":47,"column":11,"nodeType":"146","endLine":47,"endColumn":23},{"ruleId":"144","severity":1,"message":"145","line":43,"column":11,"nodeType":"146","endLine":43,"endColumn":23},"no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'navigate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'parsedUser'. Either include it or remove the dependency array.","ArrayExpression",["150"],"'Link' is defined but never used.","'sellerId' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'fetchCustomer'. Either include it or remove the dependency array.",["151"],"'response' is assigned a value but never used.",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [parsedUser, parsedUser.id]",{"range":"156","text":"157"},"Update the dependencies array to be: [fetchCustomer, user]",{"range":"158","text":"159"},[1522,1538],"[parsedUser, parsedUser.id]",[632,638],"[fetchCustomer, user]"]