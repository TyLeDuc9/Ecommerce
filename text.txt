 const handleOrderSubmit = async () => {
    try {
      const paymentRes =  await axios.get(`http://localhost:3007/api/payment/method/${paymentMethod}`);
      const paymentData = Array.isArray(paymentRes.data) ? paymentRes.data[0] : paymentRes.data;
      const transportRes = await axios.get(`http://localhost:3005/api/transport/method/${transportMethod}`);
      const transportData = Array.isArray(transportRes.data) ? transportRes.data[0] : transportRes.data;
      if (!paymentData?._id || !transportData?._id) {
        alert('Không tìm thấy phương thức thanh toán hoặc vận chuyển hợp lệ');
        return;
      }
      const orderData = {
        totalOrder: totalAmount,
        customerId: user.id,
        paymentId: paymentData._id,
        shippingInfo,
        transportId: transportData._id,
        status: 'pending',
        userId: user.id,

      };
      const orderRes = await axios.post('http://localhost:4000/api/order/create', orderData);
      // console.log("Phản hồi từ API tạo đơn hàng:", orderRes.data);
      const order = orderRes.data.order;
      const orderId = order._id;

      if (!orderId) {
        alert('Không tìm thấy ID đơn hàng.');
        return;
      }

      for (const item of cartItems) {
        const orderDetailsData = {
          orderId: orderId,
          productId: item.productId._id,
          quantity: item.quantity,
          totalPrice: item.quantity * item.productId.price,
        };
        // console.log("Dữ liệu chi tiết đơn hàng:", orderDetailsData);

        await axios.post('http://localhost:4001/api/orderDetails/create', orderDetailsData);
      }

      alert('Đặt hàng thành công!');
    } catch (error) {
      console.error('Lỗi khi tạo đơn hàng:', error);
      if (error.response) {
        alert(`Lỗi: ${error.response.data.message || 'Có lỗi xảy ra, vui lòng thử lại!'}`);

      } else {
        alert('Đặt hàng không thành công, vui lòng kiểm tra kết nối.');
      }
    }
  };
